{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/altaf/46885AF6885AE3C9/ShopeMe/src/screens/Login/index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport LogoName from \"../../component/LogoName/index\";\nimport Button from \"../../component/Button/index\";\nimport { State, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useState } from \"react\";\nimport { color, event } from \"react-native-reanimated\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Password, Username } from \"../../redux/loginSlice\";\nimport LinearGradient from \"react-native-linear-gradient\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport firebase from \"../../../firebaseConfig\";\nimport { username } from \"../../redux/signupSlice\";\nimport Api from \"../../api/Api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar index = function index(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setuserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var loginUsername = useSelector(function (state) {\n    return state.signup.username;\n  });\n  var loginPassword = useSelector(function (state) {\n    return state.signup.Password;\n  });\n  console.log(\"username==>\", loginUsername);\n  var dispatch = useDispatch();\n\n  var Login = function Login() {\n    var item, result, response;\n    return _regeneratorRuntime.async(function Login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            item = {\n              userName: userName,\n              password: password\n            };\n            console.log(userName, password);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://localhost:3000/api/v1/auth/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(item)\n            }));\n\n          case 4:\n            result = _context.sent;\n            response = result.json();\n            console.log(response);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"#430064\",\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 100,\n      marginLeft: -330,\n      alignItems: \"flex-start\",\n      justifyContent: \"flex-start\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/arrow.png\"),\n    style: {\n      height: 20,\n      width: 30,\n      marginTop: 70\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }))), React.createElement(Image, {\n    source: require(\"../../assets/logo.png\"),\n    style: {\n      height: 330,\n      width: 350,\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      padding: 40,\n      height: \"60%\",\n      borderRadius: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      width: 320,\n      padding: 10,\n      alignItems: \"center\",\n      borderRadius: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    value: userName,\n    placeholderTextColor: \"white\",\n    style: {\n      fontSize: 19,\n      padding: 20,\n      color: \"white\",\n      width: 330,\n      borderRadius: 20,\n      backgroundColor: \"gray\"\n    },\n    placeholder: \"Username\",\n    onChangeText: function onChangeText(text) {\n      return setuserName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      width: 320,\n      padding: 10,\n      alignItems: \"center\",\n      borderRadius: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      fontSize: 19,\n      padding: 20,\n      color: \"white\",\n      width: 330,\n      borderRadius: 20,\n      backgroundColor: \"gray\"\n    },\n    placeholder: \"password\",\n    placeholderTextColor: \"white\",\n    value: password,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      margin: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: Login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 20,\n      margin: 5,\n      borderRadius: 10,\n      borderWidth: 1,\n      padding: 10,\n      width: 140,\n      backgroundColor: \"#7400FF\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      justifyContent: \"center\",\n      marginLeft: 30,\n      fontSize: 22,\n      color: \"white\",\n      borderColor: \"#3E0583\",\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, \"Login\"))), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, \"Forgot Password?\"))))))));\n};\n\nexport default index;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/media/altaf/46885AF6885AE3C9/ShopeMe/src/screens/Login/index.js"],"names":["React","LogoName","Button","State","TouchableOpacity","useState","color","event","useEffect","useDispatch","useSelector","Password","Username","LinearGradient","firestore","firebase","username","Api","AsyncStorage","index","navigation","userName","setuserName","password","setPassword","loginUsername","state","signup","loginPassword","console","log","dispatch","Login","item","fetch","method","headers","body","JSON","stringify","result","response","json","flex","alignItems","justifyContent","backgroundColor","height","marginTop","marginLeft","goBack","require","width","padding","borderRadius","fontSize","text","margin","borderWidth","borderColor","fontWeight","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Alert,\n  ActivityIndicator,\n  ScrollView,\n  Dimensions,\n} from \"react-native\";\nimport LogoName from \"../../component/LogoName/index\";\nimport Button from \"../../component/Button/index\";\nimport { State, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useState } from \"react\";\nimport { color, event } from \"react-native-reanimated\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Password, Username } from \"../../redux/loginSlice\";\nimport LinearGradient from \"react-native-linear-gradient\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport firebase from \"../../../firebaseConfig\";\nimport { username } from \"../../redux/signupSlice\";\nimport Api from \"../../api/Api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst index = ({ navigation }) => {\n  const [userName, setuserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const loginUsername = useSelector((state) => state.signup.username);\n  const loginPassword = useSelector((state) => state.signup.Password);\n\n  console.log(\"username==>\", loginUsername);\n\n  // const loginusername = useSelector((state) => {\n  //   state.signup.username;\n  // });\n  // const loginPassword = useSelector((state) => {\n  //   state.signup.Password;\n  // });\n\n  // console.log(\"Login username==>\", loginusername);\n  // console.log(\"Login password==>\", loginusername);\n\n  const dispatch = useDispatch();\n\n  // console.log(\"userName===>\", userName);\n  // console.log(\"password\", password);\n\n  const Login = async () => {\n    let item = { userName, password };\n    console.log(userName, password);\n    const result = await fetch(\"https://localhost:3000/api/v1/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(item),\n    });\n    const response = result.json();\n    console.log(response);\n    // AsyncStorage.setItem(\"Token\", JSON.stringify(result));\n    // navigation.navigate(\"OTP\");\n\n    // if (!userName || !password) {\n    //   Alert.alert(\"Info\", \"Please enter username & password\");\n    // }\n\n    // const dbh = firebase.firestore();\n\n    // await dbh\n    //   .collection(\"users\")\n    //   .doc(\"login\")\n    //   .get()\n    //   .then((doc) => {\n    //     if (doc.exists) {\n    //       const ussn = doc.data().username;\n    //       const psss = doc.data().password;\n    //       console.log(\"login Document data\", ussn, psss);\n\n    //       if (userName == \"\" && password == \"\") {\n    //         Alert.alert(\"Please fill the textinputs first!\");\n    //       }\n    //       if (userName == ussn && password == psss) {\n    //         // dispatch(Username(userName), Password(password));\n    //         setuserName(ussn);\n    //         dispatch(username(ussn));\n    //         navigation.navigate(\"OTP\");\n    //       } else if (userName != ussn && password == psss) {\n    //         Alert.alert(\"invalid Username\");\n    //       } else if (userName == ussn && password != psss) {\n    //         Alert.alert(\"invalid password\");\n    //       } else if (userName != ussn && password != psss) {\n    //         Alert.alert(\"invalid UserName and Password\");\n    //       }\n    //     } else {\n    //       console.log(\"no such document\");\n    //     }\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"document get Error\", error);\n    //   });\n  };\n\n  return (\n    <>\n      <ScrollView>\n        <View\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#430064\",\n            height: \"100%\",\n          }}\n        >\n          <View\n            style={{\n              marginTop: 100,\n              marginLeft: -330,\n              alignItems: \"flex-start\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <TouchableOpacity\n              onPress={() => {\n                navigation.goBack();\n              }}\n            >\n              <Image\n                source={require(\"../../assets/arrow.png\")}\n                style={{ height: 20, width: 30, marginTop: 70 }}\n              />\n            </TouchableOpacity>\n          </View>\n          <Image\n            source={require(\"../../assets/logo.png\")}\n            style={{ height: 330, width: 350, marginTop: 10 }}\n          />\n\n          <View\n            style={{\n              backgroundColor: \"white\",\n              padding: 40,\n              height: \"60%\",\n              borderRadius: 50,\n            }}\n          >\n            <View\n              style={{\n                backgroundColor: \"white\",\n                width: 320,\n                padding: 10,\n                alignItems: \"center\",\n                borderRadius: 20,\n              }}\n            >\n              <TextInput\n                value={userName}\n                placeholderTextColor=\"white\"\n                style={{\n                  fontSize: 19,\n                  padding: 20,\n                  color: \"white\",\n                  width: 330,\n                  // textAlign: \"center\",s\n                  borderRadius: 20,\n                  // backgroundColor: \"#430064\",\n                  backgroundColor: \"gray\",\n                }}\n                placeholder=\"Username\"\n                onChangeText={(text) => setuserName(text)}\n              />\n            </View>\n            <View\n              style={{\n                backgroundColor: \"white\",\n                width: 320,\n                padding: 10,\n                alignItems: \"center\",\n                borderRadius: 20,\n              }}\n            >\n              <TextInput\n                style={{\n                  fontSize: 19,\n                  padding: 20,\n                  color: \"white\",\n                  width: 330,\n                  // textAlign: \"center\",s\n                  borderRadius: 20,\n                  // backgroundColor: \"#430064\",\n                  backgroundColor: \"gray\",\n                }}\n                placeholder=\"password\"\n                placeholderTextColor=\"white\"\n                value={password}\n                secureTextEntry={true}\n                onChangeText={(text) => setPassword(text)}\n              />\n            </View>\n\n            <View\n              style={{\n                // flexDirection: \"row\",\n                margin: 10,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <TouchableOpacity\n                // style={{  }}\n                onPress={Login}\n              >\n                <View\n                  style={{\n                    marginTop: 20,\n                    margin: 5,\n                    borderRadius: 10,\n                    borderWidth: 1,\n                    padding: 10,\n                    width: 140,\n\n                    backgroundColor: \"#7400FF\",\n                  }}\n                >\n                  <Text\n                    style={{\n                      justifyContent: \"center\",\n                      marginLeft: 30,\n                      fontSize: 22,\n                      color: \"white\",\n                      borderColor: \"#3E0583\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Login\n                  </Text>\n                </View>\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <View style={{ marginTop: 30 }}>\n                  <Text style={{ fontSize: 17 }}>Forgot Password?</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    </>\n  );\n};\n\nexport default index;\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}