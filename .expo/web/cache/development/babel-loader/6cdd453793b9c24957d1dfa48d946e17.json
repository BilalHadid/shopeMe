{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/altaf/46885AF6885AE3C9/ShopeMe/src/screens/Login/index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport LogoName from \"../../component/LogoName/index\";\nimport Button from \"../../component/Button/index\";\nimport { State, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useState } from \"react\";\nimport { color, event } from \"react-native-reanimated\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Password, Username } from \"../../redux/loginSlice\";\nimport LinearGradient from \"react-native-linear-gradient\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport firebase from \"../../../firebaseConfig\";\nimport { username } from \"../../redux/signupSlice\";\nimport Api from \"../../api/Api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Toast, Root } from \"native-base\";\n\nvar index = function index(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setuserName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      load = _useState6[0],\n      setload = _useState6[1];\n\n  var loginUsername = useSelector(function (state) {\n    return state.signup.username;\n  });\n  var loginPassword = useSelector(function (state) {\n    return state.signup.Password;\n  });\n  console.log(\"username==>\", loginUsername);\n  var dispatch = useDispatch();\n\n  var login = function login(userName, password) {\n    var item;\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setload(true);\n            console.log(\"Login\", userName, password);\n            item = {\n              email: userName,\n              password: password\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(Api.BASE_URL + \"/auth/login\", {\n              method: \"POST\",\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(item)\n            }).then(function (res) {\n              return res.json();\n            }).then(function (result) {\n              setload(false);\n\n              if (result.success == true) {\n                Toast.show({\n                  text: \"Sucess\",\n                  position: \"bottom\",\n                  type: \"success\"\n                });\n                setTimeout(function () {\n                  navigation.navigate(\"Profile\");\n                }, 1000);\n              } else {\n                Toast.show({\n                  text: result.msg,\n                  position: \"bottom\",\n                  type: \"danger\"\n                });\n              }\n\n              console.log(\"Result\", result);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Root, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"#430064\",\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 100,\n      marginLeft: -330,\n      alignItems: \"flex-start\",\n      justifyContent: \"flex-start\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/arrow.png\"),\n    style: {\n      height: 20,\n      width: 30,\n      marginTop: 70\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }))), React.createElement(Image, {\n    source: require(\"../../assets/logo.png\"),\n    style: {\n      height: 330,\n      width: 350,\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      padding: 40,\n      height: \"60%\",\n      borderRadius: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      width: 320,\n      padding: 10,\n      alignItems: \"center\",\n      borderRadius: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    value: userName,\n    placeholderTextColor: \"white\",\n    style: {\n      fontSize: 19,\n      padding: 20,\n      color: \"white\",\n      width: 330,\n      borderRadius: 20,\n      backgroundColor: \"gray\"\n    },\n    placeholder: \"Username\",\n    onChangeText: function onChangeText(text) {\n      return setuserName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      width: 320,\n      padding: 10,\n      alignItems: \"center\",\n      borderRadius: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      fontSize: 19,\n      padding: 20,\n      color: \"white\",\n      width: 330,\n      borderRadius: 20,\n      backgroundColor: \"gray\"\n    },\n    placeholder: \"password\",\n    placeholderTextColor: \"white\",\n    value: password,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      margin: 10,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      login(userName, password);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 20,\n      margin: 5,\n      borderRadius: 10,\n      borderWidth: 1,\n      padding: 10,\n      width: 140,\n      backgroundColor: \"#7400FF\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, load ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }) : React.createElement(Text, {\n    style: {\n      justifyContent: \"center\",\n      marginLeft: 30,\n      fontSize: 22,\n      color: \"white\",\n      borderColor: \"#3E0583\",\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, \"Login\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"OTP\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }, \"Forgot Password?\"))))))));\n};\n\nexport default index;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/media/altaf/46885AF6885AE3C9/ShopeMe/src/screens/Login/index.js"],"names":["React","LogoName","Button","State","TouchableOpacity","useState","color","event","useEffect","useDispatch","useSelector","Password","Username","LinearGradient","firestore","firebase","username","Api","AsyncStorage","Toast","Root","index","navigation","userName","setuserName","password","setPassword","load","setload","loginUsername","state","signup","loginPassword","console","log","dispatch","login","item","email","fetch","BASE_URL","method","headers","Accept","body","JSON","stringify","then","res","json","result","success","show","text","position","type","setTimeout","navigate","msg","flex","alignItems","justifyContent","backgroundColor","height","marginTop","marginLeft","goBack","require","width","padding","borderRadius","fontSize","margin","borderWidth","borderColor","fontWeight","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  TextInput,\n  Alert,\n  ActivityIndicator,\n  ScrollView,\n  Dimensions,\n} from \"react-native\";\nimport LogoName from \"../../component/LogoName/index\";\nimport Button from \"../../component/Button/index\";\nimport { State, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useState } from \"react\";\nimport { color, event } from \"react-native-reanimated\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Password, Username } from \"../../redux/loginSlice\";\nimport LinearGradient from \"react-native-linear-gradient\";\nimport firestore from \"@react-native-firebase/firestore\";\nimport firebase from \"../../../firebaseConfig\";\nimport { username } from \"../../redux/signupSlice\";\nimport Api from \"../../api/Api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Toast, Root } from \"native-base\";\n\nconst index = ({ navigation }) => {\n  const [userName, setuserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [load, setload] = useState(false);\n\n  const loginUsername = useSelector((state) => state.signup.username);\n  const loginPassword = useSelector((state) => state.signup.Password);\n\n  console.log(\"username==>\", loginUsername);\n\n  // const loginusername = useSelector((state) => {\n  //   state.signup.username;\n  // });\n  // const loginPassword = useSelector((state) => {\n  //   state.signup.Password;\n  // });\n\n  // console.log(\"Login username==>\", loginusername);\n  // console.log(\"Login password==>\", loginusername);\n\n  const dispatch = useDispatch();\n\n  // console.log(\"userName===>\", userName);\n  // console.log(\"password\", password);\n\n  const login = async (userName, password) => {\n    setload(true);\n\n    console.log(\"Login\", userName, password);\n    let item = {\n      email: userName,\n      password: password,\n    };\n    await fetch(`${Api.BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(item),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        setload(false);\n        if (result.success == true) {\n          Toast.show({\n            text: \"Sucess\",\n            position: \"bottom\",\n            type: \"success\",\n          });\n          setTimeout(() => {\n            navigation.navigate(\"Profile\");\n          }, 1000);\n\n          // Alert.alert(result.data.name);\n        } else {\n          Toast.show({\n            text: result.msg,\n            position: \"bottom\",\n            type: \"danger\",\n          });\n          // Alert.alert(result.msg);\n        }\n        console.log(\"Result\", result);\n      });\n  };\n\n  return (\n    <Root>\n      <ScrollView>\n        <View\n          style={{\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#430064\",\n            height: \"100%\",\n          }}\n        >\n          <View\n            style={{\n              marginTop: 100,\n              marginLeft: -330,\n              alignItems: \"flex-start\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <TouchableOpacity\n              onPress={() => {\n                navigation.goBack();\n              }}\n            >\n              <Image\n                source={require(\"../../assets/arrow.png\")}\n                style={{ height: 20, width: 30, marginTop: 70 }}\n              />\n            </TouchableOpacity>\n          </View>\n          <Image\n            source={require(\"../../assets/logo.png\")}\n            style={{ height: 330, width: 350, marginTop: 10 }}\n          />\n\n          <View\n            style={{\n              backgroundColor: \"white\",\n              padding: 40,\n              height: \"60%\",\n              borderRadius: 50,\n            }}\n          >\n            <View\n              style={{\n                backgroundColor: \"white\",\n                width: 320,\n                padding: 10,\n                alignItems: \"center\",\n                borderRadius: 20,\n              }}\n            >\n              <TextInput\n                value={userName}\n                placeholderTextColor=\"white\"\n                style={{\n                  fontSize: 19,\n                  padding: 20,\n                  color: \"white\",\n                  width: 330,\n                  // textAlign: \"center\",s\n                  borderRadius: 20,\n                  // backgroundColor: \"#430064\",\n                  backgroundColor: \"gray\",\n                }}\n                placeholder=\"Username\"\n                onChangeText={(text) => setuserName(text)}\n              />\n            </View>\n            <View\n              style={{\n                backgroundColor: \"white\",\n                width: 320,\n                padding: 10,\n                alignItems: \"center\",\n                borderRadius: 20,\n              }}\n            >\n              <TextInput\n                style={{\n                  fontSize: 19,\n                  padding: 20,\n                  color: \"white\",\n                  width: 330,\n                  // textAlign: \"center\",s\n                  borderRadius: 20,\n                  // backgroundColor: \"#430064\",\n                  backgroundColor: \"gray\",\n                }}\n                placeholder=\"password\"\n                placeholderTextColor=\"white\"\n                value={password}\n                secureTextEntry={true}\n                onChangeText={(text) => setPassword(text)}\n              />\n            </View>\n\n            <View\n              style={{\n                // flexDirection: \"row\",\n                margin: 10,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <TouchableOpacity\n                // style={{  }}\n                onPress={() => {\n                  login(userName, password);\n                }}\n              >\n                <View\n                  style={{\n                    marginTop: 20,\n                    margin: 5,\n                    borderRadius: 10,\n                    borderWidth: 1,\n                    padding: 10,\n                    width: 140,\n\n                    backgroundColor: \"#7400FF\",\n                  }}\n                >\n                  {load ? (\n                    <ActivityIndicator size={\"large\"} color=\"white\" />\n                  ) : (\n                    <Text\n                      style={{\n                        justifyContent: \"center\",\n                        marginLeft: 30,\n                        fontSize: 22,\n                        color: \"white\",\n                        borderColor: \"#3E0583\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      Login\n                    </Text>\n                  )}\n                </View>\n              </TouchableOpacity>\n              <TouchableOpacity onPress={() => navigation.navigate(\"OTP\")}>\n                <View style={{ marginTop: 30 }}>\n                  <Text style={{ fontSize: 17 }}>Forgot Password?</Text>\n                </View>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    </Root>\n  );\n};\n\nexport default index;\n\nconst styles = StyleSheet.create({});\n"]},"metadata":{},"sourceType":"module"}